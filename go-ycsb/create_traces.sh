#!/bin/bash

# --- Configuration ---

# Directory containing the .properties files generated by ycsb_generator_v2.py
WORKLOAD_DIR="./custom_workloads"

# IMPORTANT: Set this variable to your specific YCSB database binding (e.g., 'redis', 'cassandra', 'mongodb').
# This is required for the YCSB client to know which driver to use.
YCSB_DB_BINDING="text"

# NEW: Directory where the generated usertable data files will be moved.
YCSB_DATA_OUTPUT_DIR="./ycsb_data" 

# OPTIONAL: Add any database-specific connection properties here.
# Example for Redis: -p "redis.host=127.0.0.1" -p "redis.port=6379"

# --- Execution ---

if [ ! -d "$WORKLOAD_DIR" ]; then
  echo "ERROR: Workload directory not found: $WORKLOAD_DIR"
  echo "Please run the Python script (ycsb_generator_v2.py) first."
  exit 1
fi

if [ "$YCSB_DB_BINDING" == "<YOUR_DB_BINDING_HERE>" ] || [ -z "$YCSB_DB_BINDING" ]; then
  echo "ERROR: Please update the YCSB_DB_BINDING variable in this script."
  exit 1
fi

# Ensure the output directory exists
mkdir -p "$YCSB_DATA_OUTPUT_DIR"

echo "--- Starting YCSB Data Load Phase for all Workloads ---"
echo "Target DB Binding: $YCSB_DB_BINDING"
echo "Data will be moved to: $YCSB_DATA_OUTPUT_DIR"
echo "--------------------------------------------------------"

# Loop through all files ending in .properties in the workload directory
for WORKLOAD_FILE in "$WORKLOAD_DIR"/*.properties; do
 
  FILENAME=$(basename "$WORKLOAD_FILE")
 
  echo ""
  echo "========================================================"
  echo "LOADING DATA FOR WORKLOAD: $FILENAME"
  echo "========================================================"
 
  # Check if the YCSB executable is available (assumes it's in ./bin/ycsb)
  YCSB_CMD="./bin/go-ycsb"
  
  # Execute the YCSB 'load' command
  # NOTE: For the 'text' binding, data files (e.g., usertable) are created in the current directory.
  $YCSB_CMD run "$YCSB_DB_BINDING" -P "$WORKLOAD_FILE"
 
  # --- NEW: Move the generated data files ---
  # Moves all files starting with 'usertable' to the specified output directory.
  # mv usertable* "$YCSB_DATA_OUTPUT_DIR" 2>/dev/null
  echo "Moved usertable* files to $YCSB_DATA_OUTPUT_DIR"
  # ------------------------------------------

done

echo "--------------------------------------------------------"
echo "YCSB Run process complete."
